// simlpified (not equivalent) version of nand multiplex system from PRISM benchmark suite

dtmc

const int N; // number of inputs in each bundle

const double q = 0.02; // probability nand works correctly
const double p = 0.9; // probability initial inputs are stimulated

module multiplex

	c : [0..N]; // counter (number of copies of the nand done)

	s : [0..2]; // local state


	z : [0..N]; // number of new outputs equal to 1

	[] s=0 & (c<N) -> (s'=1); 
	[] s=0 & (c=N) -> (s'=2); 

	// use nand gate
	[] s=1 & z<N & c<N -> q*(1-p)*(1-p)*p + (1-q)*p*p: (s'=0) & (c'=c+1) +
			      1-(q*(1-p)*(1-p)*p + (1-q)*p*p): (s'=0) & (c'=c+1) & (z'=z+1);
		
	         
	[] s=2 -> true;
	
endmodule

// rewards: final value of gate
rewards
	[] s=0 & (c=N) : z/N;
endrewards